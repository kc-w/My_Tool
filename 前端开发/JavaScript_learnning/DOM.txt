//通过节点获取DOM元素
document.getElementById("id")//[通过id来获取对象进行操作]
document.getElementsByName("name属性值")//[通过获取name属性值来获取对象的集合,访问具体对象需要添加下标]
document.getElenebtsByTagName("标签名")//[通过标签名获取对象的集合,访问具体对象需要添加下标]
已知节点.firstChild//[得到已知节点的第一个子节点,可以递归使用]
已知节点.lastChild//[得到已知节点的最后一个子节点,可以递归使用]
已知节点.childNodes//[在IE上得到已知节点的子节点数组,通过下标来选择;在Firefox上得到已知节点的所有子节点数组,包括子节点的子节点]
已知节点.getElementsByTagName("标签名")//[得到已知节点的所有子节点包含该标签名的数组]
已知节点.previousSibling//[获得已知同级别节点的前一个节点,可以递归]
已知节点.nextSibling//[获得已知同级别节点的下一个节点,可以递归]
已知节点.parentNode//[获取已知节点的父节点]

//通过class类名获得DOM元素
hasClass("关键字")//[通过查找html文档中包含'关键字'的类名,并返回一个数组]
hasClass("关键字","p")//[通过查找html文档中包含'关键字'的'p'标签的类名,并返回一个数组]

//创建DOM元素
document.createTextNode("文本内容")//[创建文本节点]
document.createElement("")//[创建元素节点]
document.createDocumentFragment()//[创建文档碎片]


//修改DOM元素
已知节点.appendChild(节点对象)//[在已知节点内加入子节点,并放入最后]
需要删除的节点.parentNode.removeChild(需要删除的节点)//[从需要删除的节点中找到它的父节点,再删除需要删除的子节点]
被替换的节点.parentNode.replaceChild(替换节点,被替换的节点)//[由被替换的节点找到它的父节点,再替换需要替换的子节点]
已知节点.parentNode.insertBefore(插入节点,已知节点)//[已知节点前插入新节点]
已知节点.innerHTML='html代码'//[在已知节点内添加html标签]
已知节点.innerText="文本内容"//[在已知节点中添加文本]

//判断节点类型
已知节点.nodeType//[返回节点类型,元素节点返回1,属性节点返回2,文本节点返回3]

//加入新节点
document.body.appendChild(需要添加的节点对象)//[将节点加入到html文档的body标签中]

//处理元素属性
已知元素节点.getAttribute("属性名")//[得到该元素节点指定属性名的值]
已知元素节点.setAttribute("属性名","属性值")//[设置该元素节点的属性名和属性值]
已知元素节点.style.backgroundColor=''//[由于javascript不允许使用_,所有取消连字号,并将首字母大写]
已知元素节点.className[专门用于获取class属性值]
