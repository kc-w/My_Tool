Impala是Cloudera公司主导开发的新型查询系统，它提供SQL语义，能查询存储在Hadoop的HDFS和HBase中的PB级大数据。

Impala和hive的区别:
	Hive底层执行使用的是MapReduce引擎，仍然是一个批处理过程，难以满足查询的交互性。
	Impala的最大特点就是它的快速。

优点:
	1、Impala不需要把中间结果(shuffle过程)写入磁盘，省掉了大量的I/O开销。
	2、省掉了MapReduce启动的开销。MapReduce启动task的速度很慢（默认每个心跳间隔是3秒钟），Impala直接通过相应的服务进程来进行作业调度。
	3、Impala完全抛弃了MapReduce这个不适合做SQL查询思想，而是像Dremel一样借鉴了MPP并行数据库的思想，因此可做更多的查询优化，从而省掉不必要的shuffle、sort等开销。
	4、通过使用LLVM来统一编译运行时代码，避免了为支持通用编译而带来的不必要开销。
	5、用C++实现，做了很多有针对性的硬件优化，例如使用SSE指令。
	6、使用了支持Data locality的I/O调度机制，尽可能地将数据和计算分配在同一台机器上进行，减少了网络开销。


查询流程:
    1、用户通过CLI客户端提交一个查询到impalad进程，Impalad的Query Planner对SQL语句进行解析，生成解析树；然后，Planner把这个查询的解析树变成若干PlanFragment，发送到Query Coordinator.
    2、Query Coordinator通过从MySQL元数据库中获取元数据，从HDFS的名称节点中获取数据地址，以得到存储这个查询相关数据的所有数据节点。
    3、Query Coordinator初始化相应impalad上的任务执行，即把查询任务分配给所有存储这个查询相关数据的数据节点。
    4、Query Executor通过流式交换中间输出，并由Query Coordinator汇聚来自各个impalad的结果。
    5、Query Coordinator把汇总后的结果返回给CLI客户端。



服务器三大体系:
    SMP：对称多处理器结构(Symmetric Multi-Processor)
        所谓对称多处理器结构，是指服务器中多个CPU对称工作，无主次或从属关系。
        所有的硬件资源都是共享的，每个 CPU访问内存中的任何地址所需时间是相同的，因此SMP也被称为一致存储器访问结构。
    缺点:
        SMP服务器的主要特征是共享，系统中所有资源(CPU、内存、I/O等)都是共享的。也正是由于这种特征，导致了SMP服务器的主要问题，那就是它的扩展能力非常有限。

    NUMA：非一致存储访问结构(Non-Uniform Memory Access)
        利用NUMA技术，可以把几十个CPU(甚至上百个CPU)组合在一个服务器内。
        NUMA服务器的基本特征是具有多个CPU模块，每个CPU模块由多个CPU(如4个)组成，并且具有独立的本地内存、I/O槽口等。
        由于其节点之间可以通过互联模块(如称为Crossbar Switch)进行连接和信息交互，因此每个CPU可以访问整个系统的内存。
        显然，访问本地内存的速度将远远高于访问远地内存(系统内其它节点的内存)的速度，这也是非一致存储访问NUMA的由来。
        由于这个特点，为了更好地发挥系统性能，开发应用程序时需要尽量减少不同CPU模块之间的信息交互。
    缺点:
        由于访问远地内存的延时远远超过本地内存，因此当CPU数量增加时，系统性能无法线性增加。

    MPP:
        和NUMA不同，MPP提供了另外一种进行系统扩展的方式，它由多个SMP服务器通过一定的节点互联网络进行连接，协同工作，完成相同的任务，从用户的角度来看是一个服务器系统。
        其基本特征是由多个SMP服务器(每个SMP服务器称节点)通过节点互联网络连接而成，每个节点只访问自己的本地资源(内存、存储等)，是一种完全无共享(Share Nothing)结构，因而扩展能力最好，理论上其扩展无限制。
        在MPP系统中，每个SMP节点也可以运行自己的操作系统、数据库等。但和NUMA不同的是，它不存在异地内存访问的问题。
        换言之，每个节点内的CPU不能访问另一个节点的内存。节点之间的信息交互是通过节点互联网络实现的，这个过程一般称为数据重分配(Data Redistribution)。
