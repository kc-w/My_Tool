program ConsoleDemo1;//声明项目名称(程序头)
{$APPTYPE CONSOLE}//声明程序类型

{$R *.res}

//在程序主文件中使用到的所有.pas 文件的名称必需列在 uses 从句中
uses
  System.SysUtils;

//-----------------------goto语句--------------------------------------
var
  i:integer;
  label 1,2;//设置goto语句所含有的标记
  
//-----------------------with语句--------------------------------------
type
  TDate = record
    Day: Integer;
    Month: Integer;
    Year: Integer;
  end;
var
  OrderDate: TDate;
  
type
  type1 =record
    x: Integer;
	z: Integer;
  end;  
var
  t1: type1; 

type
  type2 =record
    x: Integer;
	z: Integer;
  end;  
var
  t2: type2;  

//-----------------------if语句--------------------------------------
var
  Money, Weight: Integer;

//-----------------------While语句--------------------------------------
var
  n,i: 1..100;
  Sum: integer;
  
//-----------------------For in语句--------------------------------------
Var
  Myset:set of AnsiChar;
  ch:AnsiChar;  
  
//-----------------------exit语句--------------------------------------
procedure M1;
begin
  Exit;
  writeln('M1');
end;

//自Delphi2009开始,Exit后可接一个参数以传递函数退出时所返回的结果
//需要满足以下条件
//1:后接参数的 Exit 只能用于函数中 2:参数的类型必须与函数的返回值的类型相同或兼容 
function DoSomething(aInteger: integer): string;
begin
  Exit('Negative');
end;


begin
  try

  //-----------------------goto语句--------------------------------------
  2:Writeln('输入的值为:',i);


  1:writeln('请输入 i 的值：');
  readln(i);
  if i <> 0 then
    begin
      goto 2;//无条件跳转到2标记处继续执行
    end
  else
    begin
      exit;
    end;

  //-----------------------with语句--------------------------------------
  //可以使用如下的方式来访问其中的字段
  if OrderDate.Month = 12 then
  begin
    OrderDate.Month :=  1;
    OrderDate.Year :=  OrderDate.Year + 1;
  end
  else
  begin
    OrderDate.Month :=  OrderDate.Month + 1;
  end;

  //使用 with 语句可以避免过多的输入
  with OrderDate do
    if Month = 12 then
      begin
        Month :=  1;
        Year :=  Year + 1;
      end
    else
      begin
        Month :=  Month + 1;
      end;
	  
  //编译器会从最内层的t2开始寻找标识符,若未找到则在外面一层的t2寻找,依次类推,直到外部变量
  with t1,t2 do
	begin
      x :=  3;
      z :=  'delphi';
    end;
  t1.x := t2.x//将t2的x属性赋值给t1的x属性
  t1 := type1(t2)将t2转化为type1类型赋值给t1


  //-----------------------if语句--------------------------------------
  Writeln('请输入货物的重量:');
  Read(Weight);
  if Weight <=  50 then
    Money :=  Weight * 3
  else if Weight <=  100 then
    Money :=  (Weight - 3) * 5
  else if Weight > 100 then
    Money :=  (Weight - 100) * 2 ;
  writeln('运费的金额为:' + FloatToStr(Money));


  //-----------------------While语句--------------------------------------
  write('请输入一个 1 至 100 间的数字:');
  read(n);
  sum :=  0;//将 sum 的值初始化为 0
  i :=  1;
  while i <= n do //当 i 的值小于 n 时执行循环体
    begin
      sum :=  sum+i;
      i :=  i+1;//每执行完一次，i 的值增加 1
    end;
  writeln(inttostr(sum));//显示 sum 的值

  //-----------------------Repeat语句(循环语句,先执行一次在进行判断)--------------------------------------
  write('请输入一个 1 至 100 间的数字:');
  read(n);
  sum :=  1; //将 sum 的值初始化为 1
  i :=  1;
  repeat
    i :=  i+1;
    sum :=  sum+i; 
  until i = n;//判断
  writeln(inttostr(sum)); //显示 sum 的值

  //-----------------------For 语句--------------------------------------
  write('输入 n 的值:');
  read(n);
  for i :=  1 to n do//i从1加到n
    writeln('Delphi2010'); //系统执行 n 次循环
  writeln('i 的值为:'+inttostr(i)); //显示此时 i 的值

  write('输入 n 的值:');
  read(n);
  for i :=  n downto 1 do//i从n到减1
    writeln('Delphi2010'); //系统执行 n 次循环
  writeln('i 的值为:'+inttostr(i)); //显示此时 i 的值

  //-----------------------For in语句--------------------------------------
  Myset :=  ['D','B','C','A'];
  for ch in myset do//变量集合内的元素
    Write(ch);


  //-----------------------break停止循环--------------------------------------
  //-----------------------Continue跳过本次循环,直接执行下次循环--------------------------------------

  //--------exit语句(只会退出当前的程序块,不会退出主程序,除非写在主程序)------------
  //在使用异常处理语句时,在 try...finally 部分中执行的 exit 会被当成一个异常来处理
  writeln('Start Program');
  M1;
  writeln('Ending Program');

  //-----------Halt语句(Halt(0)执行时会退出整个程序,可以返回一个整数,默认为0)---------------
  
  //-----------Terminate语句--------------- 
  //窗体程序中含有一个全局程序对象(一般是 Application),Terminate方法可在窗体程序的任何地方使程序正常中断并退出  
  procedure TForm1.Button1Click(Sender: TObject);
  begin
    Application.Terminate;
  end;






  except
    on E: Exception do
      Writeln(E.ClassName, ': ', E.Message);
  end;
end.