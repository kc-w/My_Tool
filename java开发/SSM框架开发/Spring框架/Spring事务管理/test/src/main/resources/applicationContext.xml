<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--数据库驱动-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!--连接数据库的url-->
        <property name="url" value="jdbc:mysql://localhost:3306/data"/>
        <!--连接数据库的用户名-->
        <property name="username" value="root"/>
        <!--连接数据库的密码-->
        <property name="password" value="999999999852"/>
    </bean>

    <!--配置jdbc模板-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--默认必须使用的数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置注入类-->
    <bean id="change" class="com.wan.xml.jdbc">
        <!--将dbctTemplate注入到update中-->
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <!--事务管理器,依赖于数据源-->
    <bean id="Manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--编写通知,对事务进行增强-->
    <tx:advice id="information" transaction-manager="Manager">
        <tx:attributes>
            <!--name指定与事务相关的方法名,支持通配符,如*,get*-->
            <!--propagation表示对任意方法起作用,用于指定事务的传播行为,默认为REQUIRED-->
            <!--isolation该属性指定事务的隔离级别,默认DEFAULT-->
            <!--read-only用于指定事务是否只读,默认false-->
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!--编写AOP,让spring自动对目标生成代理,需使用AspectJ表达式-->
    <aop:config>
        <!--切入点-->
        <aop:pointcut id="MyPointCut" expression="execution(* com.wan.*.*(..))"/>
        <!--切面:将切入点与通知整合-->
        <aop:advisor advice-ref="information" pointcut-ref="MyPointCut"/>
    </aop:config>

</beans>