1:自定义dialog类
import android.app.Dialog;
import android.content.Context;
import android.view.Gravity;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;

public class Dialog1 extends Dialog {
    //    style引用style样式
    public Dialog1(Context context, View layout, int style) {
        super(context, style);
        setContentView(layout);
        //获取当前Activity所在的窗体
        Window window = getWindow();
        //获得窗体的属性
        WindowManager.LayoutParams params = window.getAttributes();
        //设置弹出位置,BOTTOM,TOP,CENTER
        params.gravity = Gravity.CENTER;
        //设置Dialog距离底部的距离
        params.y =1000;
        window.setAttributes(params);
    }
}


2:在style.xml中定义Dialog1的样式
<style name="Dialog1" parent="@android:style/Theme.Dialog">
    <!-- 边框 -->
    <item name="android:windowFrame">@null</item>
    <!-- 是否浮现在activity之上 -->
    <item name="android:windowIsFloating">true</item>
    <!-- 半透明 -->
    <item name="android:windowIsTranslucent">true</item>
    <!-- 无标题 -->
    <item name="android:windowNoTitle">true</item>
    <item name="android:background">@android:color/transparent</item>
    <!-- 背景透明 -->
    <item name="android:windowBackground">@android:color/transparent</item>
    <!-- 模糊 -->
    <item name="android:backgroundDimEnabled">true</item>
    <!-- 遮罩层 -->
    <item name="android:backgroundDimAmount">0.5</item>
</style>

3:定义弹窗具体显示内容的layout.xml文件

4:指定触发的方式,激活弹窗
view = getLayoutInflater().inflate(R.layout.dialog1, null);
dialog1 = new Dialog1(this, view, R.style.Dialog1);
dialog1.setCancelable(true);
dialog1.show();



DialogFragment
DialogFragment是Android 3.0提出的，代替了Dialog，用于实现对话框。他的优点是：即使旋转屏幕，也能保留对话框状态。


public class ProgressDialogFragment extends DialogFragment {
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        getDialog().requestWindowFeature(Window.FEATURE_NO_TITLE); //消除Title区域
        getDialog().getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));  //将背景变为透明
        setCancelable(false);  //点击外部不可取消
        View root = inflater.inflate(R.layout.fragment_progress_dialog, container);
        return root;
    }
     public static ProgressDialogFragment newInstance() {
        return new ProgressDialogFragment();
    }
}

进度条动画我们使用Lottie(https://github.com/airbnb/lottie-android)实现，Lottie动画从这里(https://www.lottiefiles.com/)找到,只需要下载JSON动画文件，然后在XML中写入：
<com.airbnb.lottie.LottieAnimationView
    android:layout_width="wrap_content"  //大小根据JSON文件确定
    android:layout_height="wrap_content"
    app:lottie_fileName="loader_ring.json"   //JSON文件
    app:lottie_loop="true"    //循环播放
    app:lottie_autoPlay="true" />  //自动播放


//显示对话框
ProgressDialogFragment fragment = ProgressDialogFragment.newInstance();
fragment.show(getSupportFragmentManager(), "tag");//fragment.dismiss();

<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#ffffff"/>
    <corners
        android:radius="20dp"/>
</shape>
