implementation 'com.github.bumptech.glide:glide:3.7.0'

1:activity_main.xml


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".MainActivity">


    <ScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent">

        <TextView
                android:id="@+id/tv"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:layout_marginTop="15dp"
                android:lineSpacingExtra="4dp"
                android:textIsSelectable="true" />
    </ScrollView>

</LinearLayout>


MainActivity.class

public class MainActivity extends AppCompatActivity {



    TextView tv;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        String htmlText =
                "<h1>测试1</h1>"+
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />" +
                "<h1>测试2</h1>"+
                "<img  src=\"https://img.alicdn.com/imgextra/i3/2454452051/TB2DH1acYFkpuFjy1XcXXclapXa_!!2454452051.jpg\" />";

        tv = (TextView) findViewById(R.id.tv);
        MyImageGetter myImageGetter = new MyImageGetter(this, tv);

        tv.setText(Html.fromHtml(htmlText, myImageGetter, null));

    }


}


MyImageGetter.class

public class MyImageGetter implements Html.ImageGetter {

    private Context context;
    private TextView tvContent;
    private int actX;//实际的宽  放大缩小基于textview的宽度
    private int actY;

    private int dp2px(Context context, int dp) {
        float scale = context.getResources().getDisplayMetrics().density;
        return (int) (dp * scale + 0.5f);
    }

    public MyImageGetter(Context context, TextView tvContent) {
        this.context = context;
        this.tvContent = tvContent;
        //获取全屏大小
        DisplayMetrics metrics = context.getResources().getDisplayMetrics();
        //我的textview有左右留边  margin
        actX = metrics.widthPixels - dp2px(context, 40);
        actY = metrics.heightPixels;
    }

    @Override
    public Drawable getDrawable(String source) {
        final URLDrawable urlDrawable = new URLDrawable();
        Glide.with(context)
                .load(source)
                .asBitmap()
                //.placeholder(R.drawable.default_duan)
                //.error(R.drawable.default_duan)
                //这里一定要这样,要拿到图片的实际高度，有没有Glide其他的加载方法就不说了，懒人直接拿来用就好了
                .into(new SimpleTarget<Bitmap>() {
                    @Override
                    public void onStart() {

                    }

                    @Override
                    public void onStop() {

                    }

                    @Override
                    public void onDestroy() {

                    }

                    @Override
                    public void onLoadStarted(Drawable placeholder) {

                    }

                    @Override
                    public void onLoadFailed(Exception e, Drawable errorDrawable) {
                        //加载失败就不管
                    }

                    @Override
                    public void onResourceReady(Bitmap resource, GlideAnimation<? super Bitmap> glideAnimation) {
                        int x = resource.getWidth();
                        int y = resource.getHeight();
                        if (x > actX || y > actY) {
                            //进行等比例缩放程序
                            Matrix matrix = new Matrix();
                            matrix.postScale((float) (actX * 1.00 / x), (float) (actX * 1.00 / x));
                            //长和宽放大缩小的比例
                            resource = Bitmap.createBitmap(resource, 0, 0, x, y, matrix, true);
                        }
                        urlDrawable.bitmap = resource;
                        urlDrawable.setBounds(0, 0, resource.getWidth(), resource.getHeight());
                        tvContent.invalidate();
                        tvContent.setText(tvContent.getText()); // 解决图文重叠
                    }

                    @Override
                    public void onLoadCleared(Drawable placeholder) {

                    }


                    @Override
                    public void setRequest(Request request) {

                    }

                    @Override
                    public Request getRequest() {
                        return null;
                    }
                });
        return urlDrawable;
    }

    public class URLDrawable extends BitmapDrawable {
        protected Bitmap bitmap;

        @Override
        public void draw(Canvas canvas) {
            if (bitmap != null) {
                canvas.drawBitmap(bitmap, 0, 0, getPaint());
            }
        }
    }
}
