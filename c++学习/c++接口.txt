如果类中至少有一个函数被声明为纯虚函数，则这个类就是抽象类。纯虚函数是通过在声明中使用 "= 0" 来指定的

class Box{
   public:
      // 纯虚函数
      virtual double getVolume() = 0;
   private:
      double length;      // 长度
      double breadth;     // 宽度
      double height;      // 高度
};


设计抽象类的目的，是为了给其他类提供一个可以继承的适当的基类。
抽象类不能被用于实例化对象，它只能作为接口使用。如果试图实例化一个抽象类的对象，会导致编译错误。


#include <iostream>
using namespace std;

// 基类
class Shape {
public:
   // 基类 Shape 提供了一个接口 getArea()，在两个派生类 Rectangle 和 Triangle 中分别实现了 getArea()
   virtual int getArea() = 0;
   void setWidth(int w){
      width = w;
   }
   void setHeight(int h){
      height = h;
   }
protected:
   int width;
   int height;
};

// 派生类
class Rectangle: public Shape{
public:
   int getArea(){
      return (width * height);
   }
};
class Triangle: public Shape{
public:
   int getArea(){
      return (width * height)/2;
   }
};

int main(void){
   Rectangle Rect;
   Triangle  Tri;

   Rect.setWidth(5);
   Rect.setHeight(7);
   // 输出对象的面积
   cout << "Total Rectangle area: " << Rect.getArea() << endl;

   Tri.setWidth(5);
   Tri.setHeight(7);
   // 输出对象的面积
   cout << "Total Triangle area: " << Tri.getArea() << endl;

   return 0;
}